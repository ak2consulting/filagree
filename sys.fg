/*
class = function(init, super)

    f = function()(init, super)
        sys.print(sys.args())
        if init and (init.type == 'function') then
            self = init(sys.args())
        else
            self = []
        end
        return self
    end

    f.meta = [
        'super':super,
        'get':
            function(self, sought)
                g = self!meta.find(sought)
                if g==nil and self!super then
                    g = self!super[sought]
                end
                return g
            end,
        'set': function(self,key,value)
            sys.print('settting')
            self!meta[key] = value
        end,
    ]

    return f
end


List = class( function(name)
                  m = name[0]
                  return ['moi':m, 'list':[]]
              end )

List.add = function(self, datum)
    self!list.add(datum)
end

y = List


List.has = function(self, sought)
    return sys.find(self!list, sought) != nil
end

list = List('x')

list.add(6)

y = list
#sys.print(list.has(7))
*/

/*
List.has = function(self, sought)
    return self.find(sought) != -1
end

List.find = function(self, sought, start, finish, all, reverse)
    start = start or 0
    if ( not finish ) or ( finish > self.length - 1 ) then
        finish = self.length - 1
    end

    strings = self.type == 'string' and sought.type == 'string'

    while start < finish
        if (strings and self.part(start, start + sought.length) == sought) or
           (self[start] == sought) then
            return start
        end
        start = start + 1
    end
    return -1
end

List.replace = function(self, old, new, start, finish, all, reverse)
end
*/